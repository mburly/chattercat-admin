@page
@model Admin.Pages.Housekeeping.Manage.EmotesModel
@{
	string channel = String.Empty;
	try
	{
		channel = RouteData.Values["HousekeepingTemplate"].ToString();
	}
	catch
	{
		Response.Redirect("/Housekeeping");
	}

	string db = $"cc_{channel}";
	@using Admin.Models;
	@using MySql.Data.MySqlClient;

	List<Emote> GetEmotes()
	{
		List<Emote> emotes = new List<Emote>();
		MySqlConnection conn = new MySqlConnection($"server=localhost;port=3306;database={db};uid=root;password=;");
		conn.Open();
		string sql = "SELECT id, code, emote_id, count, url, path, date_added, source, active FROM emotes ORDER BY count DESC;";
		MySqlCommand cmd = new MySqlCommand(sql, conn);
		MySqlDataReader rdr = cmd.ExecuteReader();
		while(rdr.Read())
		{
			emotes.Add(new Emote(Int32.Parse(rdr[0].ToString()), rdr[1].ToString(), rdr[2].ToString(), Int32.Parse(rdr[3].ToString()), rdr[4].ToString(), rdr[5].ToString(), rdr[6].ToString(), Int32.Parse(rdr[7].ToString()), bool.Parse(rdr[8].ToString())));
		}
		return emotes;
	}

	List<Emote> emotes = new List<Emote>();
	int page_number = 1;
	int num_pages = 0;

	try
	{
		emotes = GetEmotes();
		if (emotes.Count % 25 != 0)
		{
			num_pages = emotes.Count / 25 + 1;
		}
		else
		{
			num_pages = emotes.Count / 25;
		}
	}
	catch
	{
		Response.Redirect("/Housekeeping");
	}
}
<html>
	<head></head>
	<body>
		<div class="holder">
			<div class="tools">	
				<div class="tool-group">
					<div class="tool-group-title">
						Chatter settings
					</div>
					<div class="tool-group-tools">
						<ul class="tool-items">
							<li class="tool-item tool-item-top tool-item-bottom"><a class="side-link" href="/Housekeeping/Manage/Chatters/@channel">Manage chatters</a></li>
						</ul>
					</div>
				</div>
				<div class="tool-group not-top">
					<div class="tool-group-title">
						Emote settings
					</div>
					<div class="tool-group-tools">
						<ul class="tool-items">
							<li class="tool-item tool-item-top tool-item-bottom tool-item-current">Manage emotes</li>
						</ul>
					</div>
				</div>
				<div class="tool-group not-top">
					<div class="tool-group-title">
						Session settings
					</div>
					<div class="tool-group-tools">
						<ul class="tool-items">
							<li class="tool-item tool-item-top tool-item-bottom"><a class="side-link" href="/Housekeeping/Manage/Sessions/@channel">Manage sessions</a></li>
						</ul>
					</div>
				</div>
			</div>

			<div class="main-content-holder">

				<div class="manage-holder">

					<div class="banner">
							<h1 class="banner-channel-name">@channel<span class="page-name"> - emotes</span></h1>
							<div class="banner-back"><a href="/Housekeeping/Manage/@channel">Return to dashboard</a></div>
							<div class="banner-back button-not-last"><a href=""><i class="fa-solid fa-arrows-rotate"></i></a></div>
					</div>

					<div class="settings-holder">
						<table class="table table-striped">
							<tr class="center">
								<th></th>
								<th>Code</th>
								<th>Count</th>
								<th>Source</th>
								<th>Date Added</th>
								<th>URL</th>
								<th>Status</th>
								<th></th>
							</tr>
						@{
							string display = String.Empty;
							for (int i = 0; i < emotes.Count; i++)
							{
								if(i == 25)
								{
									display = "hidden";
								}
								if(i % 25 == 0 && i != 0)
								{
									page_number += 1;
								}
								string count = emotes[i].Count.ToString("N0"); 
								<tr class="page-@page_number @display">
									<td><img class="manage-emote" src="https://localhost/chatcat/@emotes[i].Path" /></td>
									<td>@emotes[i].Code</td>
									<td>@count</td>
									@{
										if(emotes[i].Source == 1)
										{
											<td><span class="badge badge-twitch">Twitch</span></td>
										}
										else if(emotes[i].Source == 2)
										{
											<td><span class="badge badge-twitch">Subscriber</span></td>
										}
										else if(emotes[i].Source == 3)
										{
											<td><span class="badge badge-ffz">FFZ</span></td>
										}
										else if(emotes[i].Source == 4)
										{
											<td><span class="badge badge-ffz">FFZ</span></td>
										}
										else if(emotes[i].Source == 5)
										{
											<td><span class="badge badge-bttv">BTTV</span></td>
										}
										else if(emotes[i].Source == 6)
										{
											<td><span class="badge badge-bttv">BTTV</span></td>
										}
										<td>@emotes[i].Date_Added.Split(' ')[0]</td>
										<td><a href="@emotes[i].Url"><span class="emote-url">@emotes[i].Url</span></a></td>
										if(emotes[i].Active)
										{
											<td><span class="badge rounded-pill badge-enabled">Enabled</span></td>
											<td>
												<a href="/Housekeeping/Action/Disable/@channel$@emotes[i].Emote_Id"><span class="fa-stack fa-1x stack-button" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title="Force disable">
												<i class="fas fa-square fa-stack-2x tool-neutral"></i><i class="fas fa-ban fa-stack-1x fa-inverse"></i>
												</span></a>
											</td>
										}
										else
										{
											<td><span class="badge rounded-pill badge-disabled">Disabled</span></td>
											<td>
												<a href="/Housekeeping/Action/Enable/@channel$@emotes[i].Emote_Id"><span class="fa-stack fa-1x stack-button" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title="Force enable">
												<i class="fas fa-square fa-stack-2x tool-read"></i><i class="fas fa-check fa-stack-1x fa-inverse"></i>
												</span></a>
											</td>
										}
									}
								</tr>
						}
					}
						</table>
						<div id="pages" class="noselect">
						@{
							for (int i = 1; i <= num_pages; i++)
							{
								if (i == 1)
								{
									<span class="page-number page-current" id="page-@i-button">@i</span>
								}
								else
								{
									<span class="page-number" id="page-@i-button">@i</span>
								}
							}
						}
						</div>
					</div>
				</div>
			</div>
		</div>
	</body>
</html>
