@page
@model Admin.Pages.Housekeeping.ManageModel
@{
	string channel = String.Empty;
	try
	{
		channel = RouteData.Values["HousekeepingTemplate"].ToString();
		ViewData["Title"] = channel;
	}
	catch
	{
		Response.Redirect("/Housekeeping");
	}

	@using MySql.Data.MySqlClient
	@using Admin.Models

	bool IsOnline()
	{
		MySqlConnection conn = new MySqlConnection($"server={Constants.Config.Host};port=3306;database=cc_{channel};uid={Constants.Config.User};password={Constants.Config.Password};");
		conn.Open();
		string sql = "SELECT end_datetime FROM sessions ORDER BY ID DESC LIMIT 1";
		MySqlCommand cmd = new MySqlCommand(sql, conn);
		MySqlDataReader rdr = cmd.ExecuteReader();
		string on = String.Empty;
		while(rdr.Read())
		{
			on = rdr[0].ToString();
		}
		conn.Close();
		return on == String.Empty;
	}

	List<Emote> GetTopEmotes()
	{
		List<Emote> top_emotes = new List<Emote>();
		MySqlConnection conn = new MySqlConnection($"server=localhost;port=3306;database=cc_{channel};uid=root;password=;");
		conn.Open();
		string sql = "CALL topEmotes";
		MySqlCommand cmd = new MySqlCommand(sql, conn);
		MySqlDataReader rdr = cmd.ExecuteReader();
		while(rdr.Read())
		{
			top_emotes.Add(new Emote(rdr[0].ToString(), Int32.Parse(rdr[1].ToString()), rdr[2].ToString()));
		}
		conn.Close();
		return top_emotes;
	}

	List<Chatter> GetTopChatters()
	{
		List<Chatter> top_chatters = new List<Chatter>();
		MySqlConnection conn = new MySqlConnection($"server=localhost;port=3306;database=cc_{channel};uid=root;password=;");
		conn.Open();
		string sql = "CALL topChatters";
		MySqlCommand cmd = new MySqlCommand(sql, conn);
		MySqlDataReader rdr = cmd.ExecuteReader();
		while(rdr.Read())
		{
			top_chatters.Add(new Chatter(rdr[0].ToString(), Int32.Parse(rdr[1].ToString())));
		}
		conn.Close();
		return top_chatters;
	}

	List<Session> GetRecentSessions()
	{
		List<Session> recent_sessions = new List<Session>();
		MySqlConnection conn = new MySqlConnection($"server=localhost;port=3306;database=cc_{channel};uid=root;password=;");
		conn.Open();
		string sql = "CALL recentSessions";
		MySqlCommand cmd = new MySqlCommand(sql, conn);
		MySqlDataReader rdr = cmd.ExecuteReader();
		while(rdr.Read())
		{
			recent_sessions.Add(new Session(Int32.Parse(rdr[0].ToString()), rdr[1].ToString(), rdr[2].ToString(), rdr[3].ToString()));
		}
		conn.Close();
		return recent_sessions;
	}

	string status = String.Empty;
	List<Emote> top_emotes = new List<Emote>();
	List<Chatter> top_chatters = new List<Chatter>();
	List<Session> recent_sessions = new List<Session>();

	try
	{
		if(IsOnline())
		{
			status = "online";
		}
		else
		{
			status = "offline";
		}

		top_emotes = GetTopEmotes();
		top_chatters = GetTopChatters();
		recent_sessions = GetRecentSessions();
	}
	catch
	{
		Response.Redirect("/Housekeeping");
	}

}

<html>
	<head>
	</head>
	<body>
		<div class="holder">
			<div class="tools">	
				<div class="tool-group">
					<div class="tool-group-title">
						Chatter settings
					</div>
					<div class="tool-group-tools">
						<ul class="tool-items">
							<li class="tool-item tool-item-top tool-item-bottom"><a class="side-link" href="/Housekeeping/Manage/Chatters/@channel">Manage chatters</a></li>
						</ul>
					</div>
				</div>
				<div class="tool-group not-top">
					<div class="tool-group-title">
						Emote settings
					</div>
					<div class="tool-group-tools">
						<ul class="tool-items">
							<li class="tool-item tool-item-top tool-item-bottom"><a class="side-link" href="/Housekeeping/Manage/Emotes/@channel">Manage emotes</a></li>
						</ul>
					</div>
				</div>
				<div class="tool-group not-top">
					<div class="tool-group-title">
						Message settings
					</div>
					<div class="tool-group-tools">
						<ul class="tool-items">
							<li class="tool-item tool-item-top tool-item-bottom"><a class="side-link" href="/Housekeeping/Manage/Messages/@channel">Manage messages</a></li>
						</ul>
					</div>
				</div>
				<div class="tool-group not-top">
					<div class="tool-group-title">
						Session settings
					</div>
					<div class="tool-group-tools">
						<ul class="tool-items">
							<li class="tool-item tool-item-top tool-item-bottom"><a class="side-link" href="/Housekeeping/Manage/Sessions/@channel">Manage sessions</a></li>
						</ul>
					</div>
				</div>
			</div>

			<div class="main-content-holder">
				
				<div class="manage-holder">
					<div class="banner">
						<h1><span>@channel</span></h1>
						<span id="statusText">currently @status</span>
					</div>

					<div class="settings-holder">
						<div class="settings-group">
							<div class="setting">
								<div class="setting-header">
									<a href="/Housekeeping/Manage/Chatters/@channel">Chatters</a>
								</div>
								<div class="setting-body">
									<div class="setting-title">
										Most Active Chatters
									</div>
									<div class="setting-content-holder">
										<table class="rank-table">
										@{
											for (int i = 0; i < top_chatters.Count; i++)
											{
												int rank = i + 1;
												string message_count = @top_chatters[i].Message_Count.ToString("N0");
														<tr>
														@{
															if(status == "online")
															{
																<td class="rank-number">@rank</td>
																<td class="chat-username"><a href="/Housekeeping/Manage/Messages/@channel$@top_chatters[i].Username">@top_chatters[i].Username</a></td>
																<td class="">@message_count</td>
																<td class="tool-row">
																	<div class="tool-row-tools">
																		<a href="/Housekeeping/Manage/Messages/@channel$@recent_sessions.First().Id$@top_chatters[i].Username"><span class="fa-stack fa-1x stack-button" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title="Messages sent this session">
																			<i class="fas fa-square fa-stack-2x tool-neutral"></i><i class="fas fa-commenting fa-stack-1x fa-inverse"></i>
																		</span></a>
																	</div>
																</td>
															}
															else
															{
																<td class="rank-number">@rank</td>
																<td class="chat-username"><a href="/Housekeeping/Manage/Messages/@channel$@top_chatters[i].Username">@top_chatters[i].Username</a></td>
																<td class="">@message_count</td>
															}	
													}
														</tr>
											}
										}
										</table>
									</div>
								</div>
							</div>
							<div class="setting setting-second">
								<div class="setting-header">
									<a href="/Housekeeping/Manage/Emotes/@channel">Emotes</a>
								</div>
								<div class="setting-body">
									<div class="setting-title">
										Top 10 Emotes
									</div>
									<div class="setting-content-holder">
										<table class="rank-table">
										@{
											for (int i = 0; i < top_emotes.Count; i++)
											{
												int rank = i + 1;
												string count = top_emotes[i].Count.ToString("N0");
													<tr>
													@{
														if(i == 0)
														{
															<td class="rank-number rank-number-first rank-first">@rank</td>
															<td class="rank-first"><img class="emote" src="https://localhost/chatcat/@top_emotes[i].Path" /></td>
															<td class="rank-first">@top_emotes[i].Code</td>
															<td class="rank-first emote-count-row">@count</td>
														}
														else if(i == 1)
														{
															<td class="rank-number rank-number-second rank-second">@rank</td>
															<td class="rank-second"><img class="emote" src="https://localhost/chatcat/@top_emotes[i].Path" /></td>
															<td class="rank-second">@top_emotes[i].Code</td>
															<td class="rank-second emote-count-row">@count</td>
														}
														else if(i == 2)
														{
															<td class="rank-number rank-number-third rank-third">@rank</td>
															<td class="rank-third"><img class="emote" src="https://localhost/chatcat/@top_emotes[i].Path" /></td>
															<td class="rank-third">@top_emotes[i].Code</td>
															<td class="rank-third emote-count-row">@count</td>
														}
														else
														{
															<td class="rank-number">@rank</td>
															<td><img class="emote" src="https://localhost/chatcat/@top_emotes[i].Path" /></td>
															<td>@top_emotes[i].Code</td>
															<td class="emote-count-row">@count</td>
														}
													}
													</tr>
											}
										}
										</table>
									</div>
								</div>
							</div>
							<div class="setting">
								<div class="setting-header">
									<a href="/Housekeeping/Manage/Sessions/@channel">Sessions</a>
								</div>
								<div class="setting-body">
									<div class="setting-title">
										Last 5 Sessions
									</div>
									<div class="setting-content-holder">
										<table class="rank-table">
										@{
											for (int i = 0; i < recent_sessions.Count; i++)
											{
												<tr>
													<td style="width:99%">@recent_sessions[i].Title</td>
													@{
														if(i == 0 && status == "online")
														{
															<td style="width:1%"><div class="live"><div class="circle pulse"></div>LIVE</div></td>
														}
														else
														{
															<td style="width:1%;">
																<div>
																	<i class="fa-solid fa-calendar prefix-icon"></i>@recent_sessions[i].End_Datetime
																</div>
																<div>
																	<i class="fa-solid fa-clock prefix-icon"></i>@recent_sessions[i].Length
																</div>
															</td>
														}
													}
												</tr>
											}
										}
										</table>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</body>
</html>
